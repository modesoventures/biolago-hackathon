syntax = "proto3";

import "SiLAFramework.proto";

package sila2.org.silastandard.tests.observablebasic.v1;

/* Provides an observable command with basic return data types and basic parameters and an observable property with basic response type */
service ObservableBasic {
    /* Command for testing */
    rpc TestCommand(sila2.org.silastandard.tests.observablebasic.v1.TestCommand_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    /* Monitor the state of TestCommand */
    rpc TestCommand_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    /* Retrieve intermediate responses of TestCommand */
    rpc TestCommand_Intermediate(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.tests.observablebasic.v1.TestCommand_IntermediateResponses) {}
    /* Retrieve result of TestCommand */
    rpc TestCommand_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.org.silastandard.tests.observablebasic.v1.TestCommand_Responses) {}
    /* Property for testing */
    rpc Subscribe_TestProperty(sila2.org.silastandard.tests.observablebasic.v1.Subscribe_TestProperty_Parameters) returns (stream sila2.org.silastandard.tests.observablebasic.v1.Subscribe_TestProperty_Responses) {}
}

/* Parameters for TestCommand */
message TestCommand_Parameters {
    sila2.org.silastandard.Integer Param1 = 1;  /* First parameter */
    sila2.org.silastandard.String Param2 = 2;  /* Second parameter */
}

/* Responses of TestCommand */
message TestCommand_Responses {
}

/* Intermediate responses of TestCommand */
message TestCommand_IntermediateResponses {
    sila2.org.silastandard.String IntermediateResponse1 = 1;  /* First intermediate response */
    sila2.org.silastandard.Boolean IntermediateResponse2 = 2;  /* Second intermediate response */
}

/* Parameters for TestProperty */
message Subscribe_TestProperty_Parameters {
}

/* Responses of TestProperty */
message Subscribe_TestProperty_Responses {
    sila2.org.silastandard.Integer TestProperty = 1;  /* Property for testing */
}

