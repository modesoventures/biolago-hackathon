// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-10-08 11:15:28
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.ch.unitelabs.core.programcontroller.v1;

// Feature: Program  Controller
//   
//           Exposes the ability to start, stop and pause pre-defined programs saved in the
//           instrument. For example: a liquid handling machine, microscope, plate reader.
//   
service ProgramController {
    // Run
    //   
    //               Starts a program with a known name and provides an optional stream for progress updates. There shall be no
    //   response. See List Programs command to get the list of existing programs.
    //   
    rpc Run(sila2.ch.unitelabs.core.programcontroller.v1.Run_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc Run_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc Run_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.ch.unitelabs.core.programcontroller.v1.Run_Responses) {}
    // Stop
    //   Stops a currently running program, without a possibility to resume.
    rpc Stop(sila2.ch.unitelabs.core.programcontroller.v1.Stop_Parameters) returns (sila2.ch.unitelabs.core.programcontroller.v1.Stop_Responses) {}
    // List Programs
    //   The list of currently available programs saved in the device.
    rpc Get_ListPrograms(sila2.ch.unitelabs.core.programcontroller.v1.Get_ListPrograms_Parameters) returns (sila2.ch.unitelabs.core.programcontroller.v1.Get_ListPrograms_Responses) {}
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message Run_Parameters {
    sila2.org.silastandard.String ProgramName = 1;
}

message Run_Responses {
    
}

message Stop_Parameters {
    
}

message Stop_Responses {
    
}
message Get_ListPrograms_Parameters {
    // Empty message
}

message Get_ListPrograms_Responses {
    repeated sila2.org.silastandard.String ListPrograms = 1;
}

// ----------------- Metadata Definitions ------------------
