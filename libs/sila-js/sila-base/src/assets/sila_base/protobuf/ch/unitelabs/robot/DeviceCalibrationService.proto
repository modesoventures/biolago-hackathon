// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-10-08 11:10:58
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.ch.unitelabs.robot.devicecalibrationservice.v1;

// Feature: Device Calibration Service
//   
//           Functionality to calibrate the parameters of a Device e.g. site offsets with respect to reference pose
//   
service DeviceCalibrationService {
    // Create Device
    //   Create a device to be stored
    rpc CreateDevice(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CreateDevice_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CreateDevice_Responses) {}
    // Update Device
    //   Update the device stored
    rpc UpdateDevice(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.UpdateDevice_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.UpdateDevice_Responses) {}
    // Delete Device
    //   Delete a stored device
    rpc DeleteDevice(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DeleteDevice_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DeleteDevice_Responses) {}
    // Calibrate Markers
    //   
    //               Place the robot in the field of view of the markers and within reach of the reference site.
    //               This command temporarily stores the marker pose with respect to the camera frame.
    //               MUST be called prior to to CalibrateSite
    //   
    rpc CalibrateMarkers(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CalibrateMarkers_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CalibrateMarkers_Responses) {}
    // Calibrate Site
    //   
    //               Move the robot gripper to the site WITHOUT moving the base of the robot.
    //               This command calibrates the sites with respect to the currently stored Marker pose.
    //               Note: Calibrate Marker MUST be called prior to this command
    //   
    rpc CalibrateSite(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CalibrateSite_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CalibrateSite_Responses) {}
    // Calibrate Delid Site
    //   
    //               Move the robot gripper to the de-lid site WITHOUT moving the base of the robot.
    //               This command calibrates the sites with respect to the currently stored Marker pose.
    //               Note: Calibrate Marker MUST be called prior to this command
    //   
    rpc CalibrateDelidSite(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CalibrateDelidSite_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.CalibrateDelidSite_Responses) {}
    // Device Properties
    //   Stored device properties on the robot
    rpc Get_DeviceProperties(sila2.ch.unitelabs.robot.devicecalibrationservice.v1.Get_DeviceProperties_Parameters) returns (sila2.ch.unitelabs.robot.devicecalibrationservice.v1.Get_DeviceProperties_Responses) {}
    
}

// ----------------- Data Type definitions -----------------
// Device Properties
//   Type to represent the core properties of a device required to be set during calibration
message DataType_DeviceProperties {
    message DeviceProperties_Struct {
        // DeviceName
        //   Name of Device=
        sila2.org.silastandard.String DeviceName = 1;
        // Number of Sites
        //   Number sites to be created
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Integer NumberofSites = 2;
        // Access Height
        //   Height difference to access the site
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real AccessHeight = 3;
        // Approach Distance
        //   Distance at which to approach the device
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real ApproachDistance = 4;
    }
    sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_DeviceProperties.DeviceProperties_Struct DeviceProperties = 1;
}
// Site
//   Description of a given site of a device
message DataType_Site {
    message Site_Struct {
        // Device
        //   Device the site is associated with.
        sila2.org.silastandard.String Device = 1;
        // Site Index
        //   Index of the site to access
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Integer SiteIndex = 2;
    }
    sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_Site.Site_Struct Site = 1;
}

// ------ Command Parameter and Response definitions -------
message CreateDevice_Parameters {
    sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_DeviceProperties DeviceProperties = 1;
}

message CreateDevice_Responses {
    
}

message UpdateDevice_Parameters {
    sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_DeviceProperties DeviceProperties = 1;
}

message UpdateDevice_Responses {
    
}

message DeleteDevice_Parameters {
    sila2.org.silastandard.String DeviceName = 1;
}

message DeleteDevice_Responses {
    
}

message CalibrateMarkers_Parameters {
    sila2.org.silastandard.String DeviceName = 1;
}

message CalibrateMarkers_Responses {
    
}

message CalibrateSite_Parameters {
    sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_Site Site = 1;
}

message CalibrateSite_Responses {
    
}

message CalibrateDelidSite_Parameters {
    sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_Site Site = 1;
}

message CalibrateDelidSite_Responses {
    
}
message Get_DeviceProperties_Parameters {
    // Empty message
}

message Get_DeviceProperties_Responses {
    repeated sila2.ch.unitelabs.robot.devicecalibrationservice.v1.DataType_DeviceProperties DeviceProperties = 1;
}

// ----------------- Metadata Definitions ------------------
