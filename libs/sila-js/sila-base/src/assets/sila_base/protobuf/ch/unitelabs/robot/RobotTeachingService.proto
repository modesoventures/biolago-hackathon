// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-10-08 11:15:28
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.ch.unitelabs.robot.robotteachingservice.v1;

// Feature: Robot Teaching Service
//   
//           Functionality to teach the access to specific positions or pre-calibrated devices to the robot.
//   
service RobotTeachingService {
    // Teach Mode
    //   Turning the Teaching mode on or off.
    rpc TeachMode(sila2.ch.unitelabs.robot.robotteachingservice.v1.TeachMode_Parameters) returns (sila2.ch.unitelabs.robot.robotteachingservice.v1.TeachMode_Responses) {}
    // Teach Device
    //   
    //               Associate the current position of the robot to a given device.
    //   
    //               For robots with computer vision: Place the robots camera field of view (FoV) over the target
    //               device's markers.
    //               For robots without computer vision: Place the robot gripper with a teaching jig onto the reference site
    //               of the device.
    //   
    rpc TeachDevice(sila2.ch.unitelabs.robot.robotteachingservice.v1.TeachDevice_Parameters) returns (sila2.ch.unitelabs.robot.robotteachingservice.v1.TeachDevice_Responses) {}
    // Teach Position
    //   
    //               Associate the current position of the robot to a given name. If a marker is seen with computer vision,
    //               the closest marker will be used as a reference, if none is seen the robot will use it's own estimate.
    //   
    //               These positions should usually be used to define intermediate points where the robot has to drive to avoid
    //               collisions with an expected obstacle in its pathway.
    //   
    rpc TeachPosition(sila2.ch.unitelabs.robot.robotteachingservice.v1.TeachPosition_Parameters) returns (sila2.ch.unitelabs.robot.robotteachingservice.v1.TeachPosition_Responses) {}
    // Get Calibration Plate
    //   Pick up the plate from the calibration nest on the robot
    rpc GetCalibrationPlate(sila2.ch.unitelabs.robot.robotteachingservice.v1.GetCalibrationPlate_Parameters) returns (sila2.ch.unitelabs.robot.robotteachingservice.v1.GetCalibrationPlate_Responses) {}
    // Teach Mode
    //   Indicating if robot is in teach mode or not.
    rpc Get_TeachMode(sila2.ch.unitelabs.robot.robotteachingservice.v1.Get_TeachMode_Parameters) returns (sila2.ch.unitelabs.robot.robotteachingservice.v1.Get_TeachMode_Responses) {}
    // Taught Positions
    //   All positions taught on this robot
    rpc Get_TaughtPositions(sila2.ch.unitelabs.robot.robotteachingservice.v1.Get_TaughtPositions_Parameters) returns (sila2.ch.unitelabs.robot.robotteachingservice.v1.Get_TaughtPositions_Responses) {}
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message TeachMode_Parameters {
    sila2.org.silastandard.Boolean On = 1;
}

message TeachMode_Responses {
    
}

message TeachDevice_Parameters {
    sila2.org.silastandard.String Device = 1;
}

message TeachDevice_Responses {
    
}

message TeachPosition_Parameters {
    sila2.org.silastandard.String Position = 1;
}

message TeachPosition_Responses {
    
}

message GetCalibrationPlate_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String Orientation = 1;
}

message GetCalibrationPlate_Responses {
    
}
message Get_TeachMode_Parameters {
    // Empty message
}

message Get_TeachMode_Responses {
    sila2.org.silastandard.Boolean TeachMode = 1;
}

message Get_TaughtPositions_Parameters {
    // Empty message
}

message Get_TaughtPositions_Responses {
    repeated sila2.org.silastandard.String TaughtPositions = 1;
}

// ----------------- Metadata Definitions ------------------
