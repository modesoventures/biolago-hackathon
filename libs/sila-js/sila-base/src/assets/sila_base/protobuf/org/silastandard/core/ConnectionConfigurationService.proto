// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-10-08 09:39:03
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.org.silastandard.core.connectionconfigurationservice.v1;

// Feature: Connection Configuration Service
//   
//       This Feature MUST be implemented by each SiLA Server that offers a Server-initiated connection.
//   
//       The server-initiated connection mode is persistent, it keeps the state after a restart. Connect to a SiLA Client
//   passing the required information and optionally keep the connection details persistent, so the SiLA Server will
//   reconnect after a restart.
//   
service ConnectionConfigurationService {
    // Enable Server Initiated Connection Mode
    //   Enable the server initiated connection mode.
    rpc EnableServerInitiatedConnectionMode(sila2.org.silastandard.core.connectionconfigurationservice.v1.EnableServerInitiatedConnectionMode_Parameters) returns (sila2.org.silastandard.core.connectionconfigurationservice.v1.EnableServerInitiatedConnectionMode_Responses) {}
    // Disable Server Initiated Connection Mode
    //   Disable the server initiated connection mode.
    rpc DisableServerInitiatedConnectionMode(sila2.org.silastandard.core.connectionconfigurationservice.v1.DisableServerInitiatedConnectionMode_Parameters) returns (sila2.org.silastandard.core.connectionconfigurationservice.v1.DisableServerInitiatedConnectionMode_Responses) {}
    // Connect SiLA Client
    //   Connect a new SiLA Client.
    rpc ConnectSiLAClient(sila2.org.silastandard.core.connectionconfigurationservice.v1.ConnectSiLAClient_Parameters) returns (sila2.org.silastandard.core.connectionconfigurationservice.v1.ConnectSiLAClient_Responses) {}
    // Disconnect SiLA Client
    //   Disconnect a configured SiLA Client.
    rpc DisconnectSiLAClient(sila2.org.silastandard.core.connectionconfigurationservice.v1.DisconnectSiLAClient_Parameters) returns (sila2.org.silastandard.core.connectionconfigurationservice.v1.DisconnectSiLAClient_Responses) {}
    // Server Initiated Connection Mode Active
    //   Whether or not the server initiated connection mode is active.
    rpc Get_ServerInitiatedConnectionModeStatus(sila2.org.silastandard.core.connectionconfigurationservice.v1.Get_ServerInitiatedConnectionModeStatus_Parameters) returns (sila2.org.silastandard.core.connectionconfigurationservice.v1.Get_ServerInitiatedConnectionModeStatus_Responses) {}
    // Get Configured SiLA Clients
    //   
    //         Get the configured SiLA Clients used for server-initiated connections.
    //   
    rpc Get_ConfiguredSiLAClients(sila2.org.silastandard.core.connectionconfigurationservice.v1.Get_ConfiguredSiLAClients_Parameters) returns (sila2.org.silastandard.core.connectionconfigurationservice.v1.Get_ConfiguredSiLAClients_Responses) {}
    
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message EnableServerInitiatedConnectionMode_Parameters {
    
}

message EnableServerInitiatedConnectionMode_Responses {
    
}

message DisableServerInitiatedConnectionMode_Parameters {
    
}

message DisableServerInitiatedConnectionMode_Responses {
    
}

message ConnectSiLAClient_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String ClientName = 1;
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String SiLAClientHost = 2;
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Integer SiLAClientPort = 3;
    sila2.org.silastandard.Boolean Persist = 4;
}

message ConnectSiLAClient_Responses {
    
}

message DisconnectSiLAClient_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String ClientName = 1;
    sila2.org.silastandard.Boolean Remove = 2;
}

message DisconnectSiLAClient_Responses {
    
}
message Get_ServerInitiatedConnectionModeStatus_Parameters {
    // Empty message
}

message Get_ServerInitiatedConnectionModeStatus_Responses {
    sila2.org.silastandard.Boolean ServerInitiatedConnectionModeStatus = 1;
}

message Get_ConfiguredSiLAClients_Parameters {
    // Empty message
}

message Get_ConfiguredSiLAClients_Responses {
    message ConfiguredSiLAClients_Struct {
        // Client Name
        //   Human readable name of the SiLA Client.
        sila2.org.silastandard.String ClientName = 1;
        // SiLA Client Host
        //   Host Address of the SiLA Client.
        sila2.org.silastandard.String SiLAClientHost = 2;
        // SiLA Client Port
        //   Port of the SiLA Client.
        sila2.org.silastandard.Integer SiLAClientPort = 3;
    }
    repeated sila2.org.silastandard.core.connectionconfigurationservice.v1.Get_ConfiguredSiLAClients_Responses.ConfiguredSiLAClients_Struct ConfiguredSiLAClients = 1;
}

// ----------------- Metadata Definitions ------------------
